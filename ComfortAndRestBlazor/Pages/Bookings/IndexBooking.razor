@page "/Bookings"
@inject HttpClient Http

<h1 class="text-center mb-3">List of Bookings</h1>

<a class="btn btn-primary mb-3 " href="/Bookings/Create"> New Booking</a>

@if (bookings == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Tour ID</th>
                <th>Client ID</th>
                <th>Booking Date</th>
                <th>Number of People</th>

                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var booking in bookings)
            {
                <tr>
                    <td>@booking.Id</td>
                    <td>@booking.TourId</td>
                    <td>@booking.ClientId</td>
                    <td>@booking.BookingDate</td>
                    <td>@booking.NumberOfPeople</td>

                    <td style="white-space:nowrap">

                        <a class="btn btn-primary btn-sm" href="/Bookings/Edit/@booking.Id">Edit</a>
                        <a class="btn btn-danger btn-sm" href="/Bookings/Delete/@booking.Id">Delete</a>

                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Models.Models.Booking>? bookings;

    protected override async Task OnInitializedAsync()
    {
        bookings = await Http.GetFromJsonAsync<List<Models.Models.Booking>>("https://localhost:4000/api/Bookings");
    }

}
